use crate::{drivers::communication::ReadWriteError, errors::MWError};

use super::{
    basic::{
        adc::GetPAPowerADCResponse,
        current::GetPACurrentResponse,
        forward_reflected::{GetPAPowerDBMResponse, GetPAPowerWattResponse},
        frequency::{GetFrequencyResponse, SetFrequencyResponse},
        output::{GetRFOutputResponse, SetRFOutputResponse},
        phase::{GetPhaseResponse, SetPhaseResponse},
        setpoint::{
            GetPAPowerSetpointDBMResponse, GetPAPowerSetpointWattResponse,
            SetPAPowerSetpointDBMResponse, SetPAPowerSetpointWattResponse,
        },
        temperature::GetPATempResponse,
        voltage::GetPAVoltageResponse,
    },
    dll::{
        config::{GetDLLConfigResponse, SetDLLConfigResponse},
        enable::{GetDLLEnabledResponse, SetDLLEnabledResponse},
        sweep::{PerformSweepDBMResponse, PerformSweepWattResponse},
    },
    error::{
        clear_errors::ClearErrorsResponse, pa::GetPAErrorsResponse, status::GetStatusResponse,
    },
    information::{
        identity::GetIdentityResponse, isc_temp::GetISCTempResponse, uptime::GetUptimeResponse,
        version::GetVersionResponse,
    },
    manual::{
        attenuation::{GetAttenuationResponse, SetAttenuationResponse},
        auto_gain::{GetAutoGainStateResponse, SetAutoGainStateResponse},
        magnitude::{GetMagnitudeResponse, SetMagnitudeResponse},
        power::{GetISCPowerOutputResponse, SetISCPowerOutputResponse},
    },
    pwm::{
        duty_cycle::{GetPWMDutyCycleResponse, SetPWMDutyCycleResponse},
        frequency::SetPWMFrequencyResponse,
        timed_rf::SetTimedRFEnableResponse,
    },
    soa::{
        config::{GetSOAConfigResponse, SetSOAConfigResponse},
        current::{GetSOACurrentConfigResponse, SetSOACurrentConfigResponse},
        dissipation::{GetSOADissipationConfigResponse, SetSOADissipationConfigResponse},
        forward_power::{GetSOAForwardPowerLimitsResponse, SetSOAForwardPowerLimitsResponse},
        grace_timer::SetSOAGraceTimerResponse,
        reflected_power::{GetSOAPowerConfigResponse, SetSOAPowerConfigResponse},
        temperature::{GetSOATempConfigResponse, SetSOATempConfigResponse},
        voltage::{GetSOAVoltageConfigResponse, SetSOAVoltageConfigResponse},
        watchdog::SetSOAWatchdogConfigResponse,
    },
    system::{
        channel_id::{GetChannelIDResponse, SetChannelIDResponse},
        clock_source::{GetClockSourceResponse, SetClockSourceResponse},
        communication::SetCommunicationInterfaceResponse,
        power_max::{GetPowerMaxDbmResponse, SetPowerMaxDbmResponse},
        power_min::{GetPowerMinDbmResponse, SetPowerMinDbmResponse},
        power_offset::{GetPowerOffsetResponse, SetPowerOffsetResponse},
        system_reset::ResetSystemResponse,
        trigger_delay::SetZHLTriggerDelayResponse,
    },
};

#[derive(Debug, Clone)]
/// The response can consist of feedback from the signal generator for the given command,
/// error from sending the command over serial connection, or error from the signal generator executing the command.
pub enum Response {
    GetPAPowerADCResponse(GetPAPowerADCResponse),
    GetPACurrentResponse(GetPACurrentResponse),
    GetPAPowerDBMResponse(GetPAPowerDBMResponse),
    GetPAPowerWattResponse(GetPAPowerWattResponse),
    GetFrequencyResponse(GetFrequencyResponse),
    SetFrequencyResponse(SetFrequencyResponse),
    GetRFOutputResponse(GetRFOutputResponse),
    SetRFOutputResponse(SetRFOutputResponse),
    GetPhaseResponse(GetPhaseResponse),
    SetPhaseResponse(SetPhaseResponse),
    GetPAPowerSetpointDBMResponse(GetPAPowerSetpointDBMResponse),
    GetPAPowerSetpointWattResponse(GetPAPowerSetpointWattResponse),
    SetPAPowerSetpointDBMResponse(SetPAPowerSetpointDBMResponse),
    SetPAPowerSetpointWattResponse(SetPAPowerSetpointWattResponse),
    GetPATempResponse(GetPATempResponse),
    GetPAVoltageResponse(GetPAVoltageResponse),
    GetDLLConfigResponse(GetDLLConfigResponse),
    SetDLLConfigResponse(SetDLLConfigResponse),
    GetDLLEnabledResponse(GetDLLEnabledResponse),
    SetDLLEnabledResponse(SetDLLEnabledResponse),
    PerformSweepDBMResponse(PerformSweepDBMResponse),
    PerformSweepWattResponse(PerformSweepWattResponse),
    ClearErrorsResponse(ClearErrorsResponse),
    GetPAErrorsResponse(GetPAErrorsResponse),
    GetStatusResponse(GetStatusResponse),
    GetIdentityResponse(GetIdentityResponse),
    GetISCTempResponse(GetISCTempResponse),
    GetUptimeResponse(GetUptimeResponse),
    GetVersionResponse(GetVersionResponse),
    GetAttenuationResponse(GetAttenuationResponse),
    SetAttenuationResponse(SetAttenuationResponse),
    GetAutoGainStateResponse(GetAutoGainStateResponse),
    SetAutoGainStateResponse(SetAutoGainStateResponse),
    GetMagnitudeResponse(GetMagnitudeResponse),
    SetMagnitudeResponse(SetMagnitudeResponse),
    GetISCPowerOutputResponse(GetISCPowerOutputResponse),
    SetISCPowerOutputResponse(SetISCPowerOutputResponse),
    GetPWMDutyCycleResponse(GetPWMDutyCycleResponse),
    SetPWMDutyCycleResponse(SetPWMDutyCycleResponse),
    SetPWMFrequencyResponse(SetPWMFrequencyResponse),
    SetTimedRFEnableResponse(SetTimedRFEnableResponse),
    GetSOAConfigResponse(GetSOAConfigResponse),
    SetSOAConfigResponse(SetSOAConfigResponse),
    GetSOACurrentConfigResponse(GetSOACurrentConfigResponse),
    SetSOACurrentConfigResponse(SetSOACurrentConfigResponse),
    GetSOADissipationConfigResponse(GetSOADissipationConfigResponse),
    SetSOADissipationConfigResponse(SetSOADissipationConfigResponse),
    GetSOAForwardPowerLimitsResponse(GetSOAForwardPowerLimitsResponse),
    SetSOAForwardPowerLimitsResponse(SetSOAForwardPowerLimitsResponse),
    SetSOAGraceTimerResponse(SetSOAGraceTimerResponse),
    GetSOAPowerConfigResponse(GetSOAPowerConfigResponse),
    SetSOAPowerConfigResponse(SetSOAPowerConfigResponse),
    GetSOATempConfigResponse(GetSOATempConfigResponse),
    SetSOATempConfigResponse(SetSOATempConfigResponse),
    GetSOAVoltageConfigResponse(GetSOAVoltageConfigResponse),
    SetSOAVoltageConfigResponse(SetSOAVoltageConfigResponse),
    SetSOAWatchdogConfigResponse(SetSOAWatchdogConfigResponse),
    GetChannelIDResponse(GetChannelIDResponse),
    SetChannelIDResponse(SetChannelIDResponse),
    GetClockSourceResponse(GetClockSourceResponse),
    SetClockSourceResponse(SetClockSourceResponse),
    SetCommunicationInterfaceResponse(SetCommunicationInterfaceResponse),
    GetPowerMaxDbmResponse(GetPowerMaxDbmResponse),
    SetPowerMaxDbmResponse(SetPowerMaxDbmResponse),
    GetPowerMinDbmResponse(GetPowerMinDbmResponse),
    SetPowerMinDbmResponse(SetPowerMinDbmResponse),
    GetPowerOffsetResponse(GetPowerOffsetResponse),
    SetPowerOffsetResponse(SetPowerOffsetResponse),
    ResetSystemResponse(ResetSystemResponse),
    SetZHLTriggerDelayResponse(SetZHLTriggerDelayResponse),
    ReadWriteError(ReadWriteError),
    MWError(MWError),
    SetUartBaudRate,
}
